# CHANGE ME
# Shared SSL Certificate
ssl_certificate /etc/nginx/certs/localhost.crt;
ssl_certificate_key /etc/nginx/certs/localhost.key;
# CHANGE ME

# Default server block to catch undefined server names
server {
    listen 80 default_server;
    listen 443 default_server ssl;
    server_name _;

    return 444;
}

server {
    listen 443 ssl;
    server_name localhost; # Replace with your domain name

    ssl_session_cache shared:SSL:1m;
    ssl_session_timeout 10m;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers 'ECDHE-ECDSA-AES128-GCM-SHA256:ECDHE-RSA-AES128-GCM-SHA256:ECDHE-ECDSA-AES256-GCM-SHA384:ECDHE-RSA-AES256-GCM-SHA384';
    ssl_prefer_server_ciphers on;
    add_header Strict-Transport-Security "max-age=31536000"; # HSTS

    # Security Headers
    add_header X-Frame-Options "SAMEORIGIN";
    add_header X-Content-Type-Options "nosniff";
    add_header X-XSS-Protection "1; mode=block";

    location / {
        # Basic Authentication (if needed)
        # auth_basic "Restricted Access";
        # auth_basic_user_file /etc/nginx/.htpasswd;

        # proxy config
        proxy_pass http://127.0.0.1:3000; # Forward traffic to OpenVSCode Server (port 3000)
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        # WebSocket support (required)
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
    }
}

# Server block to redirect HTTP to HTTPS
server {
    listen 80;
    server_name localhost; # Replace with your domain name

    location / {
        return 301 https://$host$request_uri;
    }
}